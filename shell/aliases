# Navigation
alias -- -='cd -'
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'

# Docker
alias d='docker'
alias dc='docker compose'
alias dprune='docker system prune --force'
alias dps='docker ps --all'
alias drun='docker run --interactive --tty --rm'
alias dcrun='docker compose run --rm'
alias -- drun.='drun --volume=${PWD}:/mnt/host'

# Git
alias g='git'
alias ga='git a'
alias ga.='git a .'
alias gb='git b'
alias gc='git c'
alias gcb='git cb'
alias gcd='git cd'
alias gcm='git cm'
alias gco='git co'
alias gd='git d'
alias ggp='git gp'
alias ggu='git gu'
alias glo='git lo'
alias glog='git lo --graph'
alias glop='git lo --patch'
alias gm='git m'
alias grh='git rh'
alias grhh='git rhh'
alias gst='git st'
alias gsta='git sta'
alias gstl='git stl'
alias gstp='git stp'
alias gsts='git sts'

# Kitty
if [ -x "$(command -v kitty)" ] && [ ! -z "${KITTY_WINDOW_ID:+X}" ]; then
	alias icat='kitty +kitten icat'
fi

# Node
if [ -x "$(command -v npm)" ]; then
	alias npmD='npm install --save-dev'
	alias npmS='npm install --save'
	alias npmR='rm --force --recursive node_modules; npm install'
fi

if [ -x "$(command -v pnpm)" ]; then
	alias pnpmD='pnpm add --save-dev'
	alias pnpmS='pnpm add --save-prod'
	alias pnpmR='pnpm --recursive exec rm --force --recursive node_modules; rm --force --recursive node_modules; pnpm install'
fi

if [ -x "$(command -v rg)" ] && [ ! -z "${KITTY_WINDOW_ID:+X}" ]; then
	alias rg='rg --hyperlink-format=kitty'
fi

# Screen
if [ -x "$(command -v screen)" ]; then
	alias s='screen'
	alias sa='screen -R'
	alias sls='screen -list'
fi

# Vim
if [ -x "$(command -v nvim)" ]; then
	alias v='nvim'
	alias vup='nvim --headless "+Lazy! sync" "+TSUpdateSync" "+quitall"'
else
	alias v='vim'
	alias vup='vim +PlugUpgrade +PlugUpdate +only +"normal D" +CocUpdate +"nnoremap <silent> q :quitall<CR>"'
fi

# Zellij
if [ -x "$(command -v zellij)" ]; then
	alias zj='zellij'
	alias za='zellij attach --create'
	alias zls='zellij list-sessions'
	alias zks='zellij kill-all-sessions'
fi

# Miscellaneous
if [ -x "$(command -v bat)" ]; then alias c='bat'; else alias c='cat'; fi
if [ -x "$(command -v npx)" ]; then
	if [ ! -x "$(command -v ncu)" ]; then alias ncu='npx npm-check-updates'; fi
	if [ ! -x "$(command -v prettier)" ]; then alias prettier='npx prettier'; fi
	if [ ! -x "$(command -v stylua)" ]; then alias stylua='npx @johnnymorganz/stylua-bin'; fi
	if [ ! -x "$(command -v tsc)" ]; then alias tsc='npx --package="typescript" -- tsc'; fi
fi
alias l='ls -l'
alias ll='ls --almost-all -l'
alias ls='ls --color=auto --classify --group-directories-first --human-readable --hyperlink=auto --literal'

# macOS
if [[ $OSTYPE == "darwin"* ]]; then
	alias bubu='brew update && brew outdated && brew upgrade && brew cleanup'
	alias clean='rg --null --files --no-ignore-vcs --glob "*.DS_Store" $HOME/ | xargs -0 rm --'
fi

# Functions
dco() { if [ -n "$1" ]; then if [ "$1" = "default" ]; then unset DOCKER_CONTEXT; else export DOCKER_CONTEXT="$1"; fi; else docker context list; fi; }
if [ ! -x "$(command -v fd)" ] && [ -x "$(command -v rg)" ]; then
	fd() { if [ -n "$1" ]; then rg --files --hidden --glob "!{.git,node_modules}/" --glob "*$1*" "${2:-.}"; fi; }
fi
gbf() { if [ -n "$1" ]; then git checkout -b "feature/$1" "${2:-develop}"; fi; }
gbh() { if [ -n "$1" ]; then git checkout -b "hotfix/$1" "${2:-master}"; fi; }
G() { if [ -n "$(git rev-parse --is-inside-work-tree 2>/dev/null)" ]; then v +GitStatus +"nnoremap <silent> <buffer> q :quitall<CR>"; fi; }
myip() { curl --header "Accept: application/json" "https://ipinfo.io/$@"; }
