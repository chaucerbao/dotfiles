lint-debounce: 1s

tools:
  biome-css: &biome-css
    format-command: 'biome check --write --stdin-file-path=file.css'
    format-stdin: true

  biome-graphql: &biome-graphql
    format-command: 'biome check --write --stdin-file-path=file.graphql'
    format-stdin: true

  biome-javascript: &biome-javascript
    format-command: 'biome check --write --stdin-file-path=file.tsx'
    format-stdin: true

  biome-json: &biome-json
    format-command: 'biome check --write --stdin-file-path=file.json'
    format-stdin: true

  deno-css: &deno-css
    format-command: 'deno fmt --ext=scss -'
    format-stdin: true

  deno-html: &deno-html
    format-command: 'deno fmt --ext=html -'
    format-stdin: true

  deno-javascript: &deno-javascript
    format-command: 'deno fmt --ext=tsx -'
    format-stdin: true

  deno-json: &deno-json
    format-command: 'deno fmt --ext=jsonc -'
    format-stdin: true

  deno-markdown: &deno-markdown
    format-command: 'deno fmt --ext=md -'
    format-stdin: true

  deno-sql: &deno-sql
    format-command: 'deno fmt --ext=sql --unstable-sql -'
    format-stdin: true

  deno-yaml: &deno-yaml
    format-command: 'deno fmt --ext=yaml -'
    format-stdin: true

  eslint: &eslint
    format-command: 'eslint_d --fix-to-stdout --stdin --stdin-filename=file.tsx'
    format-stdin: true
    lint-command: 'eslint_d --format=compact --stdin --stdin-filename="${INPUT}"'
    lint-stdin: true
    lint-formats:
      - '%f: line %l, col %c, %tarning - %m'
      - '%f: line %l, col %c, %trror - %m'

  prettier-css: &prettier-css
    format-command: 'prettierd file.scss ${--range-start=charStart} ${--range-end=charEnd}'
    format-stdin: true
    format-can-range: true

  prettier-graphql: &prettier-graphql
    format-command: 'prettierd file.graphql ${--range-start=charStart} ${--range-end=charEnd}'
    format-stdin: true
    format-can-range: true

  prettier-html: &prettier-html
    format-command: 'prettierd file.html ${--range-start=charStart} ${--range-end=charEnd}'
    format-stdin: true
    format-can-range: true

  prettier-javascript: &prettier-javascript
    format-command: 'prettierd file.tsx ${--range-start=charStart} ${--range-end=charEnd}'
    format-stdin: true
    format-can-range: true

  prettier-json: &prettier-json
    format-command: 'prettierd file.jsonc ${--range-start=charStart} ${--range-end=charEnd}'
    format-stdin: true
    format-can-range: true

  prettier-markdown: &prettier-markdown
    format-command: 'prettierd file.mdx ${--range-start=charStart} ${--range-end=charEnd}'
    format-stdin: true
    format-can-range: true

  prettier-yaml: &prettier-yaml
    format-command: 'prettierd file.yaml ${--range-start=charStart} ${--range-end=charEnd}'
    format-stdin: true
    format-can-range: true

  stylua-lua: &stylua-lua
    format-command: 'stylua ${--range-start=charStart} ${--range-end=charEnd} --stdin-filepath="${INPUT}" -'
    format-stdin: true
    format-can-range: true

languages:
  css: &css
    - <<: *prettier-css

  graphql:
    - <<: *prettier-graphql

  html:
    - <<: *prettier-html

  javascript: &javascript
    - <<: *prettier-javascript
    - <<: *eslint

  javascriptreact: *javascript

  json: &json
    - <<: *prettier-json

  jsonc: *json

  lua:
    - <<: *stylua-lua

  markdown:
    - <<: *prettier-markdown

  scss: *css

  sql:
    - <<: *deno-sql

  typescript: *javascript

  typescriptreact: *javascript

  yaml:
    - <<: *prettier-yaml
